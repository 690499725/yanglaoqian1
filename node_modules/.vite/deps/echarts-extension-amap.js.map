{
  "version": 3,
  "sources": ["../../echarts-extension-amap/dist/echarts-extension-amap.esm.js"],
  "sourcesContent": ["/*!\n * echarts-extension-amap \n * @version 1.10.1\n * @author plainheart\n * \n * MIT License\r\n * \r\n * Copyright (c) 2019-2021 Zhongxiang.Wang\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * \n */\nimport * as echarts from 'echarts/lib/echarts';\nimport { version as version$1, graphic, matrix, util, ComponentModel, ComponentView, throttle, getInstanceByDom } from 'echarts/lib/echarts';\n\nvar isV5 = version$1.split('.')[0] > 4;\n/* global AMap */\n// `AMap.version` only exists in AMap 2.x\n// For AMap 1.x, it's `AMap.v`\n// use function instead of constant to allow importing the plugin before AMap is loaded\n\nvar isAMap2X = function isAMap2X() {\n  return AMap.version >= 2;\n};\nfunction v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\nvar logMap = {};\nfunction logWarn(tag, msg, once) {\n  var log = \"[ECharts][Extension][AMap]\".concat(tag ? ' ' + tag + ':' : '', \" \").concat(msg);\n  once && logMap[log] || console.warn(log);\n  once && (logMap[log] = true);\n}\nfunction clearLogMap() {\n  logMap = {};\n}\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return util.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n} // exclude private and unsupported options\n\n\nvar excludedOptions = ['echartsLayerZIndex', // DEPRECATED since v1.9.0\n'echartsLayerInteractive', 'renderOnMoving', 'largeMode', 'returnMapCameraState', 'layers'];\n\nfunction AMapCoordSys(amap, api) {\n  this._amap = amap;\n  this._api = api;\n  this._mapOffset = [0, 0]; // this.dimensions = ['lng', 'lat']\n}\n\nvar AMapCoordSysProto = AMapCoordSys.prototype;\n\nAMapCoordSysProto.setZoom = function (zoom) {\n  this._zoom = zoom;\n};\n\nAMapCoordSysProto.setCenter = function (center) {\n  var lnglat = new AMap.LngLat(center[0], center[1]);\n  this._center = this._amap.lngLatToContainer(lnglat);\n};\n\nAMapCoordSysProto.setMapOffset = function (mapOffset) {\n  this._mapOffset = mapOffset;\n};\n\nAMapCoordSysProto.setAMap = function (amap) {\n  this._amap = amap;\n};\n\nAMapCoordSysProto.getAMap = function () {\n  return this._amap;\n};\n\nAMapCoordSysProto.dataToPoint = function (data) {\n  var lnglat = new AMap.LngLat(data[0], data[1]);\n\n  var px = this._amap.lngLatToContainer(lnglat);\n\n  var mapOffset = this._mapOffset;\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\n};\n\nAMapCoordSysProto.pointToData = function (pt) {\n  var mapOffset = this._mapOffset;\n\n  var lnglat = this._amap.containerToLngLat(new AMap.Pixel(pt[0] + mapOffset[0], pt[1] + mapOffset[1]));\n\n  return [lnglat.lng, lnglat.lat];\n};\n\nAMapCoordSysProto.getViewRect = function () {\n  var api = this._api;\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\n};\n\nAMapCoordSysProto.getRoamTransform = function () {\n  return matrix.create();\n};\n\nAMapCoordSysProto.prepareCustoms = function () {\n  var rect = this.getViewRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'amap',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: util.bind(this.dataToPoint, this),\n      size: util.bind(dataToCoordSize, this)\n    }\n  };\n};\n\nAMapCoordSys.create = function (ecModel, api) {\n  var amapCoordSys;\n  ecModel.eachComponent('amap', function (amapModel) {\n    if (typeof AMap === 'undefined') {\n      throw new Error('AMap api is not loaded');\n    }\n\n    if (amapCoordSys) {\n      throw new Error('Only one amap component can exist');\n    }\n\n    var amap = amapModel.getAMap();\n    var echartsLayerInteractive = amapModel.get('echartsLayerInteractive');\n\n    if (!amap) {\n      var root = api.getDom();\n      var painter = api.getZr().painter;\n      var viewportRoot = painter.getViewportRoot();\n      viewportRoot.className = 'amap-ec-layer'; // PENDING not hidden?\n\n      viewportRoot.style.visibility = 'hidden'; // Not support IE8\n\n      var amapRoot = root.querySelector('.ec-extension-amap');\n\n      if (amapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in AMapView\n        viewportRoot.style.left = '0px';\n        viewportRoot.style.top = '0px';\n        root.removeChild(amapRoot);\n      }\n\n      amapRoot = document.createElement('div');\n      amapRoot.className = 'ec-extension-amap';\n      amapRoot.style.cssText = 'position:absolute;top:0;left:0;bottom:0;right:0;';\n      root.appendChild(amapRoot);\n      var options = util.clone(amapModel.get());\n\n      if ('echartsLayerZIndex' in options) {\n        logWarn('DEPRECATED', 'the option `echartsLayerZIndex` has been removed since v1.9.0, use `echartsLayerInteractive` instead.');\n      } // delete excluded options\n\n\n      util.each(excludedOptions, function (key) {\n        delete options[key];\n      });\n      amap = new AMap.Map(amapRoot, options); // PENDING: should update the model option when the user call map.setXXX?\n      // const nativeSetMapStyle = amap.setMapStyle\n      // const nativeSetLang = amap.setLang\n      // // PENDING\n      // amap.setMapStyle = function () {\n      //   nativeSetMapStyle.apply(this, arguments)\n      //   amapModel.__mapStyle = amap.getMapStyle()\n      // }\n      // // PENDING\n      // nativeSetLang && (amap.setLang = function() {\n      //   nativeSetLang.apply(this, arguments)\n      //   amapModel.__mapLang = amap.getLang()\n      // })\n      // use `complete` callback to avoid NPE when first load amap\n\n      amap.on('complete', function () {\n        amapRoot.querySelector('.amap-maps').appendChild(viewportRoot); // PENDING\n\n        viewportRoot.style.visibility = '';\n      });\n      amapModel.setAMap(amap);\n      amapModel.setEChartsLayer(viewportRoot); // Override\n\n      painter.getViewportRootOffset = function () {\n        return {\n          offsetLeft: 0,\n          offsetTop: 0\n        };\n      };\n    }\n\n    var oldEChartsLayerInteractive = amapModel.__echartsLayerInteractive;\n\n    if (oldEChartsLayerInteractive !== echartsLayerInteractive) {\n      amapModel.setEChartsLayerInteractive(echartsLayerInteractive);\n      amapModel.__echartsLayerInteractive = echartsLayerInteractive;\n    }\n\n    var center = amapModel.get('center');\n    var zoom = amapModel.get('zoom');\n\n    if (center && zoom) {\n      var amapCenter = amap.getCenter();\n      var amapZoom = amap.getZoom();\n      var centerOrZoomChanged = amapModel.centerOrZoomChanged([amapCenter.lng, amapCenter.lat], amapZoom);\n\n      if (centerOrZoomChanged) {\n        amap.setZoomAndCenter(zoom, new AMap.LngLat(center[0], center[1]));\n      }\n    } // update map style(#13)\n\n\n    var originalMapStyle = amapModel.__mapStyle;\n    var newMapStyle = amapModel.get('mapStyle');\n\n    if (originalMapStyle !== newMapStyle) {\n      amap.setMapStyle(amapModel.__mapStyle = newMapStyle);\n    } // update map lang\n    // PENDING: AMap 2.x does not support `setLang` yet\n\n\n    if (amap.setLang) {\n      var originalMapLang = amapModel.__mapLang;\n      var newMapLang = amapModel.get('lang');\n\n      if (originalMapLang !== newMapLang) {\n        amap.setLang(amapModel.__mapLang = newMapLang);\n      }\n    } else {\n      logWarn('CAVEAT', 'The current map doesn\\'t support `setLang` API!', true);\n    }\n\n    amapCoordSys = new AMapCoordSys(amap, api);\n    amapCoordSys.setMapOffset(amapModel.__mapOffset || [0, 0]);\n    amapCoordSys.setZoom(zoom);\n    amapCoordSys.setCenter(center);\n    amapModel.coordinateSystem = amapCoordSys;\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'amap') {\n      seriesModel.coordinateSystem = amapCoordSys;\n    }\n  });\n};\n\nAMapCoordSysProto.dimensions = AMapCoordSys.dimensions = ['lng', 'lat'];\n\nvar AMapModel = {\n  type: 'amap',\n  setAMap: function setAMap(amap) {\n    this.__amap = amap;\n  },\n  getAMap: function getAMap() {\n    return this.__amap;\n  },\n  setEChartsLayer: function setEChartsLayer(layer) {\n    this.__echartsLayer = layer;\n  },\n  getEChartsLayer: function getEChartsLayer() {\n    return this.__echartsLayer;\n  },\n  setEChartsLayerVisiblity: function setEChartsLayerVisiblity(visible) {\n    this.__echartsLayer.style.display = visible ? 'block' : 'none';\n  },\n  // FIXME: NOT SUPPORT <= IE 10\n  setEChartsLayerInteractive: function setEChartsLayerInteractive(interactive) {\n    this.option.echartsLayerInteractive = !!interactive;\n    this.__echartsLayer.style.pointerEvents = interactive ? 'auto' : 'none';\n  },\n  setCenterAndZoom: function setCenterAndZoom(center, zoom) {\n    this.option.center = center;\n    this.option.zoom = zoom;\n  },\n  centerOrZoomChanged: function centerOrZoomChanged(center, zoom) {\n    var option = this.option;\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\n  },\n  defaultOption: {\n    center: [116.397428, 39.90923],\n    zoom: 5,\n    isHotspot: false,\n    resizeEnable: true,\n    // extension specific options\n    // echartsLayerZIndex: 2000, // DEPRECATED since v1.9.0\n    echartsLayerInteractive: true,\n    renderOnMoving: true,\n    largeMode: false,\n    // since v1.10.0\n    returnMapCameraState: false\n  }\n};\nvar AMapModel$1 = isV5 ? ComponentModel.extend(AMapModel) : AMapModel;\n\nvar _isAMap2X;\n\nvar AMapView = {\n  type: 'amap',\n  init: function init() {\n    this._isFirstRender = true;\n    _isAMap2X = isAMap2X();\n  },\n  render: function render(amapModel, ecModel, api) {\n    var rendering = true;\n    var amap = amapModel.getAMap();\n    var viewportRoot = api.getZr().painter.getViewportRoot();\n    var offsetEl = amap.getContainer();\n    var coordSys = amapModel.coordinateSystem;\n    var renderOnMoving = amapModel.get('renderOnMoving');\n    var resizeEnable = amapModel.get('resizeEnable');\n    var largeMode = amapModel.get('largeMode');\n    var returnMapCameraState = amapModel.get('returnMapCameraState');\n    var viewMode = amap.getViewMode_();\n    var is3DMode = viewMode === '3D';\n\n    var moveHandler = function moveHandler(e) {\n      if (rendering) {\n        return;\n      }\n\n      var offsetElStyle = offsetEl.style;\n      var mapOffset = [-parseInt(offsetElStyle.left, 10) || 0, -parseInt(offsetElStyle.top, 10) || 0]; // only update style when map offset changed\n\n      var viewportRootStyle = viewportRoot.style;\n      var offsetLeft = mapOffset[0] + 'px';\n      var offsetTop = mapOffset[1] + 'px';\n\n      if (viewportRootStyle.left !== offsetLeft) {\n        viewportRootStyle.left = offsetLeft;\n      }\n\n      if (viewportRootStyle.top !== offsetTop) {\n        viewportRootStyle.top = offsetTop;\n      }\n\n      coordSys.setMapOffset(amapModel.__mapOffset = mapOffset);\n      var actionParams = {\n        type: 'amapRoam',\n        animation: {\n          // compatible with ECharts 5.x\n          // no delay for rendering but remain animation of elements\n          duration: 0\n        }\n      };\n\n      if (returnMapCameraState) {\n        e = e || {};\n        var center = e.center;\n\n        if (!center) {\n          // normalize center LngLat to Array\n          center = amap.getCenter();\n          center = [center.lng, center.lat];\n        }\n\n        actionParams.camera = {\n          viewMode: viewMode,\n          center: center,\n          zoom: e.zoom || amap.getZoom(),\n          rotation: e.rotation == null ? amap.getRotation() : e.rotation,\n          pitch: e.pitch == null ? amap.getPitch() : e.pitch,\n          scale: amap.getScale(),\n          bounds: amap.getBounds()\n        };\n      }\n\n      api.dispatchAction(actionParams);\n    };\n\n    amap.off('mapmove', this._moveHandler);\n    amap.off('moveend', this._moveHandler);\n    amap.off('viewchange', this._moveHandler);\n    amap.off('camerachange', this._moveHandler);\n    amap.off('zoom', this._moveHandler);\n\n    if (this._resizeHandler) {\n      amap.off('resize', this._resizeHandler);\n    }\n\n    if (this._moveStartHandler) {\n      amap.off('movestart', this._moveStartHandler);\n    }\n\n    if (this._moveEndHandler) {\n      amap.off('moveend', this._moveEndHandler);\n      amap.off('zoomend', this._moveEndHandler);\n    }\n\n    amap.on(renderOnMoving ? _isAMap2X ? 'viewchange' : is3DMode ? 'camerachange' : 'mapmove' : 'moveend', // FIXME: bad performance in 1.x in the cases with large data, use debounce?\n    // moveHandler\n    !_isAMap2X && largeMode ? moveHandler = throttle(moveHandler, 20, true) : moveHandler);\n    this._moveHandler = moveHandler;\n\n    if (renderOnMoving && !(_isAMap2X && is3DMode)) {\n      // need to listen to zoom if 1.x & 2D mode\n      // FIXME: unnecessary `mapmove` event triggered when zooming\n      amap.on('zoom', moveHandler);\n    }\n\n    if (!renderOnMoving) {\n      amap.on('movestart', this._moveStartHandler = function () {\n        setTimeout(function () {\n          amapModel.setEChartsLayerVisiblity(false);\n        }, 0);\n      });\n\n      var moveEndHandler = this._moveEndHandler = function (e) {\n        (!e || e.type !== 'moveend') && moveHandler(e);\n        setTimeout(function () {\n          amapModel.setEChartsLayerVisiblity(true);\n        }, _isAMap2X || !largeMode ? 0 : 20);\n      };\n\n      amap.on('moveend', moveEndHandler);\n      amap.on('zoomend', moveEndHandler);\n\n      if (this._isFirstRender && is3DMode) {\n        // FIXME: not rewrite AMap instance method\n        var nativeSetPicth = amap.setPitch;\n        var nativeSetRotation = amap.setRotation;\n\n        amap.setPitch = function () {\n          nativeSetPicth.apply(this, arguments);\n          moveEndHandler();\n        };\n\n        amap.setRotation = function () {\n          nativeSetRotation.apply(this, arguments);\n          moveEndHandler();\n        };\n      }\n    }\n\n    if (resizeEnable) {\n      var resizeHandler = function resizeHandler() {\n        getInstanceByDom(api.getDom()).resize();\n      };\n\n      if (!_isAMap2X && largeMode) {\n        resizeHandler = throttle(resizeHandler, 20, true);\n      }\n\n      amap.on('resize', this._resizeHandler = resizeHandler);\n    }\n\n    this._isFirstRender = rendering = false;\n  },\n  dispose: function dispose(ecModel) {\n    clearLogMap();\n    var component = ecModel.getComponent('amap');\n\n    if (component) {\n      component.getAMap().destroy();\n      component.setAMap(null);\n      component.setEChartsLayer(null);\n\n      if (component.coordinateSystem) {\n        component.coordinateSystem.setAMap(null);\n        component.coordinateSystem = null;\n      }\n\n      delete this._moveHandler;\n      delete this._resizeHandler;\n      delete this._moveStartHandler;\n      delete this._moveEndHandler;\n    }\n  }\n};\nvar AMapView$1 = isV5 ? ComponentView.extend(AMapView) : AMapView;\n\nvar name = \"echarts-extension-amap\";\nvar version = \"1.10.1\";\n\n/**\n * AMap component extension\n */\nfunction install(registers) {\n  // Model\n  isV5 ? registers.registerComponentModel(AMapModel$1) : registers.extendComponentModel(AMapModel$1); // View\n\n  isV5 ? registers.registerComponentView(AMapView$1) : registers.extendComponentView(AMapView$1); // Coordinate System\n\n  registers.registerCoordinateSystem('amap', AMapCoordSys); // Action\n\n  registers.registerAction({\n    type: 'amapRoam',\n    event: 'amapRoam',\n    update: 'updateLayout'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent('amap', function (amapModel) {\n      var amap = amapModel.getAMap();\n      var center = amap.getCenter();\n      amapModel.setCenterAndZoom([center.lng, center.lat], amap.getZoom());\n    });\n  });\n}\n\n/**\r\n * TODO use `echarts/core` rather than `echarts/lib/echarts`\r\n * to avoid self-registered `CanvasRenderer` and `DataSetComponent` in Apache ECharts 5\r\n * but it's not compatible with echarts v4. Leave it to 2.0.\r\n */\nisV5 ? echarts.use(install) : install(echarts);\n\nexport { name, version };\n"],
  "mappings": "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",
  "names": ["isAMap2X", "centerOrZoomChanged", "moveHandler", "resizeHandler", "Component_default", "version"]
}
